{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf470
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fmodern\fcharset0 Courier;\f2\fswiss\fcharset0 ArialMT;
}
{\colortbl;\red255\green255\blue255;\red230\green230\blue230;\red26\green26\blue26;\red255\green255\blue255;
}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 The tutorial gives a barebones example of sending information to a database from a webpage. The tutorial shows a basic webpage where when the user clicks a button the current trial number, start time and end time is recorded in the database ({\field{\*\fldinst{HYPERLINK "https://www.mozerlab.us/tutorial-db/"}}{\fldrslt https://www.mozerlab.us/tutorial-db/}}).\
\
The live webpage files can be found on the lab server at \'93/var/www/html/tutorial-db\'94 the webpage uses the database \'93tutorial-db\'94 which I have given you both access. Note that if you go to the web files, you can look up my personal login information for both the server and mysql. This means that any your information (which is posted in /var/www/html) will also be visible to the rest of the lab. This is a bit of a security flaw and I\'92ll have to powwow with Mohammad to figure out a solution. \
\
To create a working version of the website that you control, you can modify the files that I sent to you. I\'92ll assume brettroads is the user in this scenario, but obviously you would substitute your user name. \
\
make a copy and rename the directory (e.g., brettroads-tutorial-db) \
change the website name in the deploy_website.py file\
	website = \'91brettroads-tutorial-db'\
\
change the _v0.config.py configuration file:\
	change the user name (e.g., username = \'91brettroads\'92\
	change the password to the appropriate password (e.g. password = \'91brettsPassword\'92)\
	change the website name (e.g., website = \'91brettroads-tutorial-db\'92)\
\
change the php configuration file that contains the mysql database information\
	change the mysql username\
	this->username = "brettroads";\
	change the mysql password \
	$this->password = \'93brettsMysqlPassword\'94;\
Note in the configuration file, doRecord and debugOn are both set to True, meaning that data is sent to the database and debug messages are generated at the web inspector console.\
\
\
You don\'92t need to change the database or create one. We\'92ll just use the same \'93tutorial-db\'94 database for all users. Although you don\'92t need to create a database, the following is the code I used to make the tables in the tuorial-db database:\
\
Create Database\
\pard\pardeftab720\sl320\partightenfactor0

\f1\fs28 \cf0 \cb2 \expnd0\expndtw0\kerning0
\
CREATE DATABASE tuorial-db;\
\
\cb1 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \kerning1\expnd0\expndtw0 Open Database\
\pard\pardeftab720\sl320\partightenfactor0

\f1\fs28 \cf0 \cb2 \expnd0\expndtw0\kerning0
\
USE tutorial-db;\
\
\pard\pardeftab720\sl320\partightenfactor0

\f0\fs24 \cf0 \cb1 \
Create ASSIGNMENT Table\
\pard\pardeftab720\sl320\partightenfactor0

\f1\fs28 \cf0 \cb2 \
CREATE TABLE assignment (\
assignment_id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,\
mturk_assignment_id VARCHAR(128) NOT NULL,\
mturk_worker_id VARCHAR(128) NOT NULL,\
mturk_hit_id VARCHAR(128) NOT NULL,\
ipaddress VARCHAR(128) NOT NULL,\
browser VARCHAR(128) NOT NULL,\
platform VARCHAR(128) NOT NULL,\
language VARCHAR(128) NOT NULL,\
code_version VARCHAR(128) NOT NULL,\
experiment_condition INT NOT NULL,\
begin_hit VARCHAR(32) NOT NULL,\
end_hit VARCHAR(32),\
status VARCHAR(128) NOT NULL\
);\
\
\pard\pardeftab720\sl320\partightenfactor0

\f0\fs24 \cf0 \cb1 \
Create TRIAL Table\
\pard\pardeftab720\sl320\partightenfactor0

\f1\fs28 \cf0 \cb2 CREATE TABLE trial (\
trial_id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,\
assignment_id INT NOT NULL,\
trial_no INT NOT NULL,\
start_time_ms VARCHAR(32) NOT NULL,\
end_time_ms VARCHAR(32),\
FOREIGN KEY (assignment_id) REFERENCES assignment(assignment_id)\
ON DELETE CASCADE\
);\
\pard\pardeftab720\sl320\partightenfactor0

\f0\fs24 \cf0 \cb1 \
To see everything that is in the assignment table, sign into you mysql account, and type the following:\
\pard\pardeftab720\sl320\partightenfactor0

\f1\fs28 \cf0 \cb2 \
USE tutorial-db;\
SELECT * FROM assignment;\
\
\pard\pardeftab720\sl320\partightenfactor0

\f0\fs24 \cf0 \cb1 To see everything that is in the trial table type:\
\pard\pardeftab720\sl320\partightenfactor0

\f1\fs28 \cf0 \cb2 \
SELECT * FROM trial;\
\
\pard\pardeftab720\sl320\partightenfactor0

\f0\fs24 \cf0 \cb1 Check out mysql query syntax for more complicated queries. You should see a few entries that were made from me playing around with the webpage.\
\
\
====\
\pard\pardeftab720\sl220\partightenfactor0

\f2\fs20 \cf3 \cb4 \outl0\strokewidth0 \strokec3 The short answer is no. In most situations, you only want a particular field/property to be used in at most two tables. You can think of cascade delete like deleting a branch of a tree. You just have to tell mysql how the tree is defined so it deletes things appropriately. Consider the following simple example with three tables:\
\cb1 \
\cb4 table 1: assignment_table (assignment_id)\
table 2: trial_table (trial_id, assignment_id)\
table 3: action_table (action_id, trial_id)\
\cb1 \
\cb4 These tables would be created with the following mysql commands:\
\cb1 \
\cb4 CREATE TABLE assignment_table (\cb1 \
\cb4 assignment_id INT NOT NULL PRIMARY KEY AUTO_INCREMENT);\cb1 \
\
\cb4 CREATE TABLE trial_table (\cb1 \
\cb4 trial_id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,\cb1 \
\cb4 assignment_id INT NOT NULL,\cb1 \

\b \cb4 FOREIGN KEY (assignment_id) REFERENCES assignment_table(assignment_id)\cb1 \
\cb4 ON DELETE CASCADE);
\b0 \cb1 \
\
\cb4 CREATE TABLE action_table (\cb1 \
\cb4 action_id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,\cb1 \
\cb4 trial_id INT NOT NULL,\cb1 \

\b \cb4 FOREIGN KEY (trial_id) REFERENCES trial_table(trial_id)\cb1 \
\cb4 ON DELETE CASCADE);
\b0 \cb1 \
\
\cb4 The code in bold is the critical part that sets up the linkages so that deletions propagate (i.e., cascade) from assignment_table -> trial_table -> action_table.\
\pard\pardeftab720\sl320\partightenfactor0

\f0\fs24 \cf0 \cb1 \outl0\strokewidth0 \
}